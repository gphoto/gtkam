dnl Process this file with autoconf to produce a configure script.
AC_PREREQ(2.50)
AC_INIT(configure.in)
AM_INIT_AUTOMAKE(gtkam, 0.1.10rc2)
AM_CONFIG_HEADER(config.h)
AM_MAINTAINER_MODE

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC

CFLAGS="$CFLAGS -g -Wall -Wmissing-declarations -Wmissing-prototypes"
LDFLAGS="$LDFLAGS -g -Wall"

dnl Add the languages which your application supports here.
ALL_LINGUAS="da de es fr hu it ja no pt_BR pt_PT ru sl sv uk"
AM_GNU_GETTEXT

dnl ---------------------------------------------------------------------------
dnl We need the location of pkg-config.
dnl ---------------------------------------------------------------------------
AC_PATH_PROG(PKG_CONFIG,pkg-config)
if test -z "${PKG_CONFIG}"; then
	AC_ERROR([You need pkg-config for gtkam.])
fi

dnl ---------------------------------------------------------------------------
dnl Libraries we need for gtkam
dnl ---------------------------------------------------------------------------
PKG_CHECK_MODULES(GTKAM, gtk+-2.0 libgphoto2 >= 2.1)
AC_SUBST(GTKAM_CFLAGS)
AC_SUBST(GTKAM_LIBS)

dnl ---------------------------------------------------------------------------
dnl bonobo-activation: Optional, but contains great stuff.
dnl ---------------------------------------------------------------------------
try_bonobo=true
bonobo_msg=no
have_bonobo=false
AC_ARG_WITH(bonobo-activation, [  --without-bonobo        Don't compile with bonobo], [
	if test x$withval = xno; then
		try_bonobo=false
	fi])
if $try_bonobo; then
	if ${PKG_CONFIG} --exists bonobo-activation-2.0 libbonoboui-2.0; then
		PKG_CHECK_MODULES(BONOBO, bonobo-activation-2.0 libbonoboui-2.0)
		AC_SUBST(BONOBO_CFLAGS)
		AC_SUBST(BONOBO_LIBS)
		AC_DEFINE(HAVE_BONOBO,1,[whether we use bonobo])
		bonobo_msg=yes
		have_bonobo=true
	fi
fi

dnl ---------------------------------------------------------------------------
dnl libgnomeui: If we want to display documentation, we need gnome_help_*
dnl             and gphoto2-manual.
dnl ---------------------------------------------------------------------------
try_gnome=true
gnome_msg=no
have_gnome=false
AC_ARG_WITH(gnome, [  --without-gnome         Don't compile with gnome], [
	if test x$withval = xno; then
		try_gnome=false
	fi])
if $try_gnome; then
	if ${PKG_CONFIG} --exists libgnomeui-2.0 gphoto2-manual; then
		APP_DATADIR=`pkg-config --variable=datadir gphoto2-manual`
		PKG_CHECK_MODULES(GNOME, libgnomeui-2.0)
		AC_DEFINE(HAVE_GNOME,1,[whether we use gnome])
		gnome_msg=yes
		have_gnome=true
	fi
fi
AC_SUBST(GNOME_CFLAGS)
AC_SUBST(GNOME_LIBS)
AC_SUBST(APP_DATADIR)

dnl ---------------------------------------------------------------------------
dnl GIMP plugin
dnl ---------------------------------------------------------------------------
try_gimp=true
gimp_msg=no
have_gimp=false
AC_ARG_WITH(gimp, [  --without-gimp          Don't compile GIMP plugin],[
	if test x$withval = xno; then
		try_gimp=false
	fi])
if $try_gimp; then
	if ${PKG_CONFIG} --exists gimpui-1.3; then
		PKG_CHECK_MODULES(GTKAM_GIMP, gimpui-1.3 libgphoto2 >= 2.1)
		AC_SUBST(GTKAM_GIMP_CFLAGS)
		AC_SUBST(GTKAM_GIMP_LIBS)
		gimp_msg="yes"
		have_gimp=true
	fi
fi
AM_CONDITIONAL(HAVE_GIMP, $have_gimp)

dnl ---------------------------------------------------------------------------
dnl libexif: If libexif(-gtk) is installed on the system, we are able
dnl          to display EXIF information.
dnl ---------------------------------------------------------------------------
exif_msg="no (http://www.sourceforge.net/projects/libexif)"
try_exif=true
have_exif=false
AC_ARG_WITH(exif, [  --without-exif          Don't use libexif],[
        if test x$withval = xno; then
                try_exif=false
        fi])
if $try_exif; then
        AC_MSG_CHECKING([for libexif-gtk])
        if ${PKG_CONFIG} --exists libexif-gtk > /dev/null 2>&1; then
		if ${PKG_CONFIG} --atleast-version=0.3.2 libexif-gtk; then
                        EXIF_CFLAGS=`$PKG_CONFIG --cflags libexif-gtk`
                        EXIF_LIBS=`$PKG_CONFIG --libs libexif-gtk`
                        have_exif=true
                        exif_msg=yes
                        AC_DEFINE(HAVE_EXIF,1,[Whether to use libexif])
		else
			exif_msg="no (installed version too old)"
                fi
        fi
	AC_MSG_RESULT($exif_msg)
fi
AM_CONDITIONAL(HAVE_EXIF, $have_exif)
AC_SUBST(EXIF_CFLAGS)
AC_SUBST(EXIF_LIBS)

dnl ---------------------------------------------------------------------------
dnl rpm: 
dnl
dnl      Note that if libusb-devel is installed, the gtkam-rpm will depend
dnl      on libusb and libusb-devel.
dnl ---------------------------------------------------------------------------
AC_ARG_WITH(rpmbuild, [  --with-rpmbuild=PATH      Program to use for building RPMs])
AC_MSG_CHECKING([for rpmbuild or rpm])
if test -x "${with_rpmbuild}"; then
    RPMBUILD="${with_rpmbuild}"
    AC_MSG_RESULT([${RPMBUILD} (from parameter)])
    AC_SUBST(RPMBUILD)
else
    AC_MSG_RESULT([using autodetection])
    AC_CHECK_PROGS(RPMBUILD, [rpmbuild rpm], /bin/false)
    AC_MSG_RESULT([${RPMBUILD} (autodetect)])
fi
AM_CONDITIONAL(ENABLE_RPM, test "$RPMBUILD" != "/bin/false")
AM_CONDITIONAL(RPM_LIBUSB_DEVEL, rpm -q libusb-devel > /dev/null 2>&1)

dnl Use -Wall if we have gcc.
changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl

AC_OUTPUT([
Makefile
art/Makefile
pixmaps/Makefile
packaging/Makefile
packaging/rpm/Makefile
packaging/rpm/package.spec
src/Makefile
test/Makefile
doc/Makefile
])

echo "

Configuration

        Source code location: ${srcdir}
	Compiler:             ${CC}

	GIMP plugin:          $gimp_msg
	EXIF support:         $exif_msg
	Bonobo support:       $bonobo_msg
	GNOME support:        $gnome_msg
"
